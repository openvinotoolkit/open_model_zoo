# Copyright (c) 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

description: >-
  YOLACT ResNet 50 is a simple, fully convolutional model for real-time instance segmentation
  described in "YOLACT: Real-time Instance Segmentation" paper <https://arxiv.org/abs/1904.02689>.
  Model pre-trained in Pytorch* on Common Objects in Context (COCO) <https://cocodataset.org/#home>
  dataset. For details, see the repository <https://github.com/dbolya/yolact>.
task_type: instance_segmentation
files:
  - name: yolact/yolact.py
    size: 31516
    checksum: 8e3b27af4ba4d68600fa37dc9c3716890f41306904c92da4a6f5ff1ee9447d1301835d62d33710a6833d7e8e02c744a1
    source: https://raw.githubusercontent.com/dbolya/yolact/57b8f2d95e62e2e649b382f516ab41f949b57239/yolact.py
  - name: yolact/backbone.py
    size: 17286
    checksum: 9f507122dfe8c164343d7f302668afc671f3d730e14a454d859e7ccff77e92a77ecf027cccce6eba9ae76f4a3f98594c
    source: https://raw.githubusercontent.com/dbolya/yolact/57b8f2d95e62e2e649b382f516ab41f949b57239/backbone.py
  - name: yolact/data/config.py
    size: 31172
    checksum: f7f77e46e09d6b2912dee1b9f4bde3a16e79b769eba43b0cac0c53070345bcf3d169752ae60159f134ee44d7a5d70670
    source: https://raw.githubusercontent.com/dbolya/yolact/57b8f2d95e62e2e649b382f516ab41f949b57239/data/config.py
  - name: yolact/utils/timer.py
    size: 3508
    checksum: 4b2161e5216da3be3089b3d391da206ad3f69b596c9d55353e399de99fa69f17e42803b6a65ac1cbebd62910e6a90dc5
    source: https://raw.githubusercontent.com/dbolya/yolact/57b8f2d95e62e2e649b382f516ab41f949b57239/utils/timer.py
  - name: yolact/utils/functions.py
    size: 6503
    checksum: 1940ef89ddc62704f1508673c81ed289689644f5c58b23bd1ccbbc2f29fddafd105c0f0f84c6ca2182a1c7343ae99def
    source: https://raw.githubusercontent.com/dbolya/yolact/57b8f2d95e62e2e649b382f516ab41f949b57239/utils/functions.py
  - name: yolact/layers/interpolate.py
    size: 412
    checksum: f8780a33988fb04c0408f22735f72eb0780295ebc5f5c3a316fabdc1985e957b007deeb525f2980169c46c7e0bfcf407
    source: https://raw.githubusercontent.com/dbolya/yolact/57b8f2d95e62e2e649b382f516ab41f949b57239/layers/interpolate.py
  - name: yolact/yolact_resnet50_54_800000.pth
    size: 127300392
    checksum: 7ef5b5367fd30871c77814500bbecbaf32f0a9e5721bba0a1cc4479e78e4d6ed25363ebfe6982b94189a11da1e45cf78
    original_source:
      $type: google_drive
      id: 1yp7ZbbDwvMiFJEq4ptVKTYTI2VeRDXl0
    source: https://storage.openvinotoolkit.org/repositories/open_model_zoo/public/2022.1/yolact-resnet50-fpn-pytorch/yolact/yolact_resnet50_54_800000.pth
framework: pytorch
postprocessing:
  - $type: regex_replace
    file: yolact/yolact.py
    # Original postprocessing https://github.com/dbolya/yolact/blob/33912fb1056fedbbcac8c9cd1b1e357bbb12df7d/layers/functions/detection.py
    # can not to be converted to ONNX due to some limitations.
    # Changes: rewritten on PyTorch*, enabled work with batch in boxes decoding, removed dynamic configurable part.
    pattern: 'from layers import Detect'
    replacement: |
      def detect(preds_out, _):
          loc, priors = preds_out.pop('loc'), preds_out.pop('priors')
          variances = [0.1, 0.2]
          boxes = torch.cat((priors[:, :2] + loc[:, :, :2] * variances[0] * priors[:, 2:], priors[:, 2:] * torch.exp(loc[:, :, 2:] * variances[1])), 2)
          boxes_copy = boxes.clone()
          boxes_result1 = boxes_copy[:, :, :2] - boxes[:, :, 2:] / 2
          boxes_result2 = boxes_copy[:, :, 2:] + boxes_result1
          boxes_result = torch.cat((boxes_result1, boxes_result2), 2)
          preds_out['boxes'] = boxes_result
          return preds_out
  - $type: regex_replace
    file: yolact/yolact.py
    pattern: 'use_jit = torch.cuda.device_count\(\) <= 1'
    replacement: 'use_jit = False'
  - $type: regex_replace
    file: yolact/yolact.py
    pattern: 'torch.cuda.current_device\(\)'
    replacement: ''
  - $type: regex_replace
    file: yolact/yolact.py
    pattern: 'self.detect = Detect\(cfg.num_classes, bkg_label=0, top_k=cfg.nms_top_k,\n            conf_thresh=cfg.nms_conf_thresh, nms_thresh=cfg.nms_thresh\)'
    replacement: "self.detect = detect"
  - $type: regex_replace
    file: yolact/yolact.py
    pattern: 'torch.load\(path\)'
    replacement: "torch.load(path, map_location=torch.device('cpu'))"
conversion_to_onnx_args:
  - --model-name=create_model
  - --model-path=$config_dir
  - --model-path=$dl_dir/yolact
  - --import-module=model
  - --input-shape=1,3,550,550
  - --output-file=$conv_dir/yolact-resnet50-fpn.onnx
  - --model-param=weights=r"$dl_dir/yolact/yolact_resnet50_54_800000.pth"
  - --input-names=input.1
  - --output-names=conf,mask,proto,boxes
model_optimizer_args:
  - --input=input.1
  - --layout=input.1(NCHW)
  - --mean_values=input.1[123.675,116.78,103.94]
  - --scale_values=input.1[58.395,57.12,57.375]
  - --reverse_input_channels
  - --output=conf,mask,proto,boxes
  - --input_model=$conv_dir/yolact-resnet50-fpn.onnx
license: https://raw.githubusercontent.com/dbolya/yolact/master/LICENSE
