diff --git a/src/convert.py b/src/convert.py
new file mode 100644
index 0000000..16888b6
--- /dev/null
+++ b/src/convert.py
@@ -0,0 +1,12 @@
+import torch.onnx
+import onnx
+
+import _init_paths
+from opts import opts
+from detectors.detector_factory import detector_factory
+
+opt = opts().init()
+Detector = detector_factory[opt.task]
+detector = Detector(opt)
+input_shape = [1, 3, opt.input_res, opt.input_res]
+torch.onnx.export(detector.model, torch.randn(input_shape), 'ctdet_coco_dlav0_{}.onnx'.format(opt.input_res), export_params=True)
diff --git a/src/lib/models/networks/dlav0.py b/src/lib/models/networks/dlav0.py
index 3ff343c..99e2e88 100644
--- a/src/lib/models/networks/dlav0.py
+++ b/src/lib/models/networks/dlav0.py
@@ -602,9 +602,9 @@ class DLASeg(nn.Module):
         x = self.dla_up(x[self.first_level:])
         # x = self.fc(x)
         # y = self.softmax(self.up(x))
-        ret = {}
-        for head in self.heads:
-            ret[head] = self.__getattr__(head)(x)
+        ret = []
+        for head in sorted(self.heads.keys()):
+            ret.append(self.__getattr__(head)(x))
         return [ret]
 
     '''
