models:
  - name: SampLeNet_example

    # list of launchers for your topology.
    launchers:
        # launcher framework (e.g. caffe, dlsdk)
      - framework: dlsdk
        # device for infer (e.g. for dlsdk cpu, gpu, hetero:cpu, gpu ...)
        device: CPU
        # topology IR (*.prototxt for caffe, *.xml for InferenceEngine, etc)
        # path to topology is prefixed with directory, specified in "-m/--models" option
        caffe_model:   SampLeNet.prototxt
        # topology weights binary (*.caffemodel for caffe, *.bin for InferenceEngine)
        caffe_weights: SampLeNet.caffemodel
        # launcher returns raw result, so it should be converted
        # to an appropriate representation with adapter
        adapter: classification

    # metrics, preprocessing and postprocessing are typically dataset specific, so dataset field
    # specifies data and all other steps required to validate topology
    # there is typically definitions file, which contains options for common datasets and which is merged
    # during evaluation, but since "sample_dataset" is not used anywhere else, this config contains full definition
    datasets:
        # uniquely distinguishable name for dataset
        # note that all other steps are specific for this dataset only
        # if you need to test topology on multiple datasets, you need to specify
        # every step explicitly for each dataset
      - name: sample_dataset
        # directory where input images are searched.
        # prefixed with directory specified in "-s/--source" option
        data_source: sample_dataset/test
        # name of converted annotation file (specified in -a option during annotation conversion)
        # prefixed with directory specified in "-a/--annotations" option
        annotation: sample_annotation

        # list of preprocessing, applied to each image during validation
        # order of entries matters
        preprocessing:
            # resize input image to topology input size
            # you may specify size to which image should be resized
            # via dst_width, dst_height fields
          - type: resize
            size: 32
            # topology is trained on RGB images, but OpenCV reads in BGR
            # thence it must be converted to RGB
          - type: bgr_to_rgb
            # dataset mean and standard deviation
          - type: normalization
            # you may specify precomputed statistics manually or use precomputed values, such as ImageNet as well
            mean: (125.307, 122.961, 113.8575)
            std: (51.5865, 50.847, 51.255)

        # list of metrics, calculated on dataset
        metrics:
          - type: accuracy
            top_k: 1
